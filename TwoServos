esphome:
  name: twoservos
  friendly_name: TwoServos

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
#api:
#  encryption:
#    key: "bCzTAoXq6dgS7OwUNl5AX+Z1IlRqxNBBTlpzwwg9orc="

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

output:
  - platform: esp8266_pwm
    id: pwm_output_right
    pin: D1
    frequency: 50 Hz
  - platform: esp8266_pwm
    id: pwm_output_left
    pin: D3
    frequency: 50 Hz

servo:
  - id: servo_right
    output: pwm_output_right
    auto_detach_time: 5s # shutdown power to servo after 5s
    transition_length:  0s # speed of servo, with 0s being the

  - id: servo_left
    output: pwm_output_left
    auto_detach_time: 5s # shutdown power to servo after 5s
    transition_length:  0s # speed of servo, with 0s being the

script:
  - id: open_script
    then:
      - servo.write:
          id: servo_right
          level: -100.0%
      - servo.write: 
          id: servo_left
          level: 100.0%
  - id: close_script
    then:
      - servo.write:
          id: servo_right
          level: 15.0%
      - servo.write: 
          id: servo_left
          level: -15.0%

button:
  - platform: template
    name: Open
    id: open_button
    icon: "mdi:liquid-spot"
    on_press:
      then:
        - script.execute: open_script
  - platform: template
    name: Close
    id: close_button
    icon: "mdi:liquid-spot"
    on_press:
      then:
        - script.execute: close_script
  

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp8266.yaml@main
  import_full_config: true

# To have a "next url" for improv serial
web_server:
